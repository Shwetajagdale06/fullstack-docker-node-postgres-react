name: CI/CD Fullstack Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_BACKEND_URI }}
        aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_FRONTEND_URI }}

    - name: Build & Push Backend Image
      run: |
        docker build -t backend ./backend
        docker tag backend:latest ${{ secrets.ECR_BACKEND_URI }}:latest
        docker push ${{ secrets.ECR_BACKEND_URI }}:latest

    - name: Build & Push Frontend Image
      run: |
        docker build -t frontend ./frontend
        docker tag frontend:latest ${{ secrets.ECR_FRONTEND_URI }}:latest
        docker push ${{ secrets.ECR_FRONTEND_URI }}:latest

    - name: Deploy to EC2 via SSH
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem
        chmod 400 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.ECR_BACKEND_URI }}:latest
          docker pull ${{ secrets.ECR_FRONTEND_URI }}:latest
          docker stop backend frontend || true
          docker rm backend frontend || true
          docker run -d --name backend -p 3000:3000 ${{ secrets.ECR_BACKEND_URI }}:latest
          docker run -d --name frontend -p 8080:80 ${{ secrets.ECR_FRONTEND_URI }}:latest
        EOF
